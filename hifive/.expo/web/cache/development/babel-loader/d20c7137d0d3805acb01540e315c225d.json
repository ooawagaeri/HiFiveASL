{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\5-NUS\\\\Orbital\\\\orbital-asl-application\\\\hifive\\\\screens\\\\API.js\";\nimport React, { useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, FAB } from 'react-native-paper';\n\nfunction APITest() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var loadData = function loadData() {\n    fetch('http://localhost:8000/api/asl/', {\n      method: \"GET\"\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      setData(data);\n      setLoading(false);\n    }).catch(function (error) {\n      return Alert.alert(\"error\", error.message);\n    });\n  };\n\n  useEffect(function () {\n    loadData();\n  }, []);\n\n  var renderData = function renderData(item) {\n    return React.createElement(Card, {\n      style: styles.cardstyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"blue\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, item.name));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(item) {\n      return renderData(item.item);\n    },\n    onRefresh: function onRefresh() {\n      return loadData();\n    },\n    refreshing: loading,\n    keyExtractor: function keyExtractor(item) {\n      return '${item.id}';\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), React.createElement(FAB, {\n    style: styles.fab,\n    small: false,\n    icon: \"plus\",\n    theme: {\n      colors: {\n        accent: 'green'\n      }\n    },\n    onPress: function onPress() {\n      return console.log(\"Pressed\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  cardstyle: {\n    padding: 10,\n    margin: 10,\n    backgroundColor: '#eee'\n  },\n  fab: {\n    position: 'absolute',\n    margin: 10,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'green'\n  }\n});\nexport default APITest;","map":{"version":3,"sources":["D:/5-NUS/Orbital/orbital-asl-application/hifive/screens/API.js"],"names":["React","useState","useEffect","Card","FAB","APITest","data","setData","loading","setLoading","loadData","fetch","method","then","resp","json","catch","error","Alert","alert","message","renderData","item","styles","cardstyle","color","name","fab","colors","accent","console","log","StyleSheet","create","padding","margin","backgroundColor","position","right","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Alert, Button, FlatList, StyleSheet, Text, View } from 'react-native';\r\nimport {Card, FAB} from 'react-native-paper'\r\n\r\n\r\n\r\nfunction APITest() {\r\n\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const loadData = () => {\r\n    fetch('http://localhost:8000/api/asl/', {method:\"GET\"})\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n      setData(data)\r\n      setLoading(false)\r\n    })\r\n    .catch(error => Alert.alert(\"error\", error.message))\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [])\r\n\r\n  const renderData = (item) => {\r\n    return (\r\n      <Card style = {styles.cardstyle}>\r\n        <Text style = {{color:\"blue\"}}>{item.name}</Text>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <View>\r\n    <FlatList\r\n      data = {data}\r\n      renderItem = {(item) => {\r\n        return renderData(item.item);\r\n      }}\r\n      onRefresh = {() => loadData()}\r\n      refreshing = {loading}\r\n      keyExtractor = {item => '${item.id}'}\r\n    />\r\n    <FAB\r\n      style = {styles.fab}\r\n      small = {false}\r\n      icon = \"plus\"\r\n      theme = {{colors:{accent:'green'}}}\r\n      onPress = {() => console.log(\"Pressed\")}\r\n    />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    cardstyle: {\r\n      padding:10,\r\n      margin:10,\r\n      backgroundColor:'#eee',\r\n    },\r\n    fab: {\r\n      position:'absolute',\r\n      margin:10,\r\n      right:0,\r\n      bottom:0,\r\n      backgroundColor:'green'\r\n    },\r\n  });\r\n\r\n  export default APITest"]},"metadata":{},"sourceType":"module"}